- name: Clone Repo
  git:
    repo: '{{ repository }}'
    dest: '/home/{{ ansible_user }}/{{ app }}'
    force: yes
    accept_hostkey: yes
    key_file: '/home/{{ ansible_user }}/.ssh/ota-bot-key'
  register: git_clone_app_finished
  tags:
    - setup
    - update

- name: Install NPM packages
  command:
    cmd: npm i --production --unsafe-perm=true --production=true
    chdir: '/home/{{ ansible_user }}/{{ app }}'
  tags:
    - setup
    - update

- name: Add .env file
  copy:
    src: .env
    dest: '/home/{{ ansible_user }}/{{ app }}/.env'
  tags:
    - setup

- name: Install services declarations
  git:
    repo: '{{ services_repository }}'
    dest: '/home/{{ ansible_user }}/{{ services_directory }}'
    force: yes
    accept_hostkey: yes
    key_file: '/home/{{ ansible_user }}/.ssh/ota-bot-key'
  register: git_clone_app_finished
  tags:
    - setup
    - update

- name: Stop OpenTermsArchive
  command: pm2 stop "{{ app }}"
  ignore_errors: yes
  tags:
    - restart
    - stop
    - update

- include_tasks: database.yml
  vars:
    name: OpenTermsArchive-Snapshots
    repository: '{{ snapshots_repository }}'
    directory: '{{ snapshots_directory }}'

- include_tasks: database.yml
  vars:
    name: OpenTermsArchive-Versions
    repository: '{{ versions_repository }}'
    directory: '{{ versions_directory }}'

- name: Start OpenTermsArchive
  command:
    cmd: pm2 start --name "{{ app }}" --exp-backoff-restart-delay=1000 npm -- run start:scheduler:prod
    chdir: '/home/{{ ansible_user }}/{{ app }}'
  environment:
    NODE_ENV: production
  tags:
    - restart
    - start
    - update
